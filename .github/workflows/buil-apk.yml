name: Build Android APK
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build patched Docker image
        run: |
          cat <<EOF > Dockerfile
          FROM python:3.9-slim
          RUN apt-get update && apt-get install -y \\
              build-essential git openjdk-17-jdk-headless unzip zip \\
              libncurses5 libstdc++6 libffi-dev libssl-dev libsqlite3-dev zlib1g-dev \\
              libjpeg-dev libfreetype6-dev libpng-dev liblzma-dev libgdbm-dev \\
              libnss3-dev libreadline-dev libbz2-dev libgdbm-compat-dev \\
              && rm -rf /var/lib/apt/lists/*
          ENV LANG C.UTF-8
          RUN pip install --no-cache-dir cython buildozer
          RUN python3 -c "import buildozer, os; f = buildozer.__file__.replace('__init__.pyc','__init__.py'); \
              txt = open(f).read(); txt = txt.replace(\"cont = input('Are you sure you want to continue [y/n]?')\", \"cont = 'y'\"); \
              open(f, 'w').write(txt)"
          WORKDIR /app
          EOF
          docker build -t patched-buildozer .
      - name: Build APK
        run: |
         docker run --rm \
          -v ${{ github.workspace }}:/app \
          -w /app \
          -e BUILDOZER_ALLOW_ROOT=1 \
          sridhar281994/buildozer-android:v13 \
          /bin/sh -c "buildozer android debug"
        
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: bin/*.apk




